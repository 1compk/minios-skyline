#!/bin/bash

# Author: Tomas M. <http://www.linux-live.org>
# Author: crims0n. <https://minios.ru>

if [ -f /run/initramfs/lib/config ]; then
    . /run/initramfs/lib/config || exit 1
fi

if [ -f /run/initramfs/lib/buildconfig ]; then
    . /run/initramfs/lib/buildconfig || exit 1
fi

CWD=$(pwd)
SOURCE=/run/initramfs/memory
TEMP=/tmp/"$LIVEKITNAME"iso.$$
REGEX='^$'

if [ "$1" = "-e" ]; then
    REGEX="$2"
    shift
    shift
fi

TARGET="$(readlink -f "$1")"

if [ "$TARGET" = "" ]; then
    echo ""
    echo "Generate MiniOS ISO image, adding specified modules"
    echo "Regular expression is used to exclude any existing path or file with -e regex"
    echo ""
    echo "Usage:"
    echo "        $0 [[ -e regex ]] target.iso [[module.sb]] [[module.sb]] ..."
    echo ""
    echo "Examples:"
    echo "        # to create MiniOS iso without chromium.sb module:"
    echo "        $0 -e 'chromium' minios_without_chromium.iso"
    echo ""
    echo "        # to create MiniOS text-mode core only:"
    echo "        $0 -e 'firmware|xorg|desktop|apps|chromium' minios_textmode.iso"
    exit 1
fi

if [ -e "$SOURCE/data/$LIVEKITNAME/boot/isolinux.bin" ]; then
    MINIOS=$SOURCE/data/$LIVEKITNAME
fi

if [ -e "$SOURCE/iso/$LIVEKITNAME/boot/isolinux.bin" ]; then
    MINIOS=$SOURCE/iso/$LIVEKITNAME
fi

if [ -e "$SOURCE/toram/boot/isolinux.bin" ]; then
    MINIOS=$SOURCE/toram
fi

if [ "$MINIOS" = "" ]; then
    echo "Cannot find boot/isolinux.bin in MiniOS data" >&2
    exit 2
fi

EFI="$SOURCE/data/EFI"
BOOT="$SOURCE/data/boot"

B="-b $LIVEKITNAME/boot/isolinux.bin -c $LIVEKITNAME/boot/isolinux.boot"

if [ $BOOT_TYPE = "hybrid" ]; then
    C="-no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot"
else
    C="-no-emul-boot -boot-load-size 4 -boot-info-table"
fi

if [ -x "$(which xorriso 2>/dev/null)" ] && [ $BOOT_TYPE = "hybrid" ]; then
    M="xorriso -as mkisofs -isohybrid-mbr $MINIOS/boot/isohdpfx.bin"
    D=" -isohybrid-gpt-basdat -e"
elif [ -x "$(which genisoimage 2>/dev/null)" ]; then
    M=genisoimage
    if [ $BOOT_TYPE = "hybrid" ]; then
        D="-efi-boot"
    else
        D=""
    fi
fi
if [ $BOOT_TYPE = "hybrid" ]; then
    E="/EFI/boot/efiboot.img -no-emul-boot -isohybrid-gpt-basdat"
else
    E=""
fi

VER="$SYSTEMNAME"

GRAFT=$(
    cd "$MINIOS"
    find . -type f | sed -r "s:^[.]/::" | egrep -v "^boot/isolinux.(bin|boot)$" | egrep -v "^boot/isohdpfx.(bin|boot)$" | egrep -v "^changes/" | egrep -v "$REGEX" | while read LINE; do
        echo "$LIVEKITNAME/$LINE=$MINIOS/$LINE"
    done
    cd "$EFI"
    find . -type f | sed -r "s:^[.]/::" | egrep -v "$REGEX" | while read LINE; do
        echo "EFI/$LINE=$EFI/$LINE"
    done
    cd "$BOOT"
    find . -type f | sed -r "s:^[.]/::" | egrep -v "$REGEX" | while read LINE; do
        echo "boot/$LINE=$BOOT/$LINE"
    done
)

# add all modules
while [ "$2" != "" ]; do
    if [ ! -e "$2" ]; then
        echo "File does not exist: $2"
        exit 3
    fi
    BAS="$(basename "$2")"
    MOD="$(readlink -f "$2")"
    GRAFT="$GRAFT $LIVEKITNAME/modules/$BAS=$MOD"
    shift
done

(
    mkdir -p $TEMP/$LIVEKITNAME/{boot,modules,changes}
    cp "$MINIOS/boot/isolinux.bin" "$TEMP/$LIVEKITNAME/boot"
    cp "$MINIOS/boot/isohdpfx.bin" "$TEMP/$LIVEKITNAME/boot"
    cd "$TEMP"
    $M -hide-rr-moved -o - -quiet -v -J -R -D -V "$VER" -A "$VER" -input-charset utf-8 \
        $B $C $D $E -graft-points $GRAFT \
        .
) >"$TARGET"

rm -Rf $TEMP
