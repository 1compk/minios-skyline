#!/bin/bash

set -e          # exit on error
set -o pipefail # exit on pipeline error
set -u          # treat unset variable as error

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

echo "davfs2 davfs2/suid_file boolean true" | debconf-set-selections

if [ $PACKAGE_VARIANT != "cloud" ]; then
    if [ $DISTRIBUTION_TYPE = "debian" ]; then
        #sudo DEBIAN_FRONTEND=$DEBIAN_FRONTEND_TYPE \
        $APT_CMD install $APT_OPTIONS \
            acpi-support-base
    elif [ $DISTRIBUTION_TYPE = "ubuntu" ]; then
        #sudo DEBIAN_FRONTEND=$DEBIAN_FRONTEND_TYPE \
        $APT_CMD install $APT_OPTIONS --no-install-suggests \
            acpi-support
    fi
fi

# install packages
if [ -f $SCRIPT_DIR/$PACKAGE_VARIANT.list ]; then
    #sudo DEBIAN_FRONTEND=$DEBIAN_FRONTEND_TYPE \
    $APT_CMD install $APT_OPTIONS \
        $(grep -vE "^\s*#" $SCRIPT_DIR/$PACKAGE_VARIANT.list | tr "\n" " ") >>$OUTPUT 2>&1
fi

# install packages
if [ $PACKAGE_VARIANT = "standard" ]; then
    #sudo DEBIAN_FRONTEND=$DEBIAN_FRONTEND_TYPE \
    $APT_CMD install $APT_OPTIONS \
        zstd >>$OUTPUT 2>&1
    if [ $DISTRIBUTION = "stretch" ] || [ $DISTRIBUTION = "xenial" ] || [ $DISTRIBUTION = "bionic" ]; then
        #sudo DEBIAN_FRONTEND=$DEBIAN_FRONTEND_TYPE \
        $APT_CMD install $APT_OPTIONS \
            liblz4-tool >>$OUTPUT 2>&1
    else
        #sudo DEBIAN_FRONTEND=$DEBIAN_FRONTEND_TYPE \
        $APT_CMD install $APT_OPTIONS \
            lz4 >>$OUTPUT 2>&1
    fi

fi

if [ $DISTRIBUTION = "bullseye" ]; then
    #sudo DEBIAN_FRONTEND=$DEBIAN_FRONTEND_TYPE \
    $APT_CMD install $APT_OPTIONS \
        selinux-policy-default >>$OUTPUT 2>&1
    sed -i "s,SELINUX=permissive,SELINUX=disabled,g" /etc/selinux/config
fi

if [ $DISTRIBUTION_TYPE = "debian" ]; then
    if [ $PACKAGE_VARIANT = "cloud" ]; then
        KERNEL_IMAGE="linux-image-$KERNEL_ARCH"
    else
        KERNEL_IMAGE="linux-image-$KERNEL_ARCH"
    fi
elif [ $DISTRIBUTION_TYPE = "ubuntu" ]; then
    if [ $DISTRIBUTION = "xenial" ]; then
        KERNEL_IMAGE="linux-image-4.4.0-210-generic"
    elif [ $DISTRIBUTION = "focal" ]; then
        KERNEL_IMAGE="linux-image-5.4.0-84-generic"
    elif [ $DISTRIBUTION = "bionic" ]; then
        KERNEL_IMAGE="linux-image-4.15.0-156-generic"
    fi
fi

$APT_CMD update >>$OUTPUT 2>&1 &&
    $APT_CMD install $APT_OPTIONS $KERNEL_IMAGE >>$OUTPUT 2>&1

if [ $DISTRIBUTION_TYPE = "ubuntu" ]; then
    $APT_CMD autoremove $APT_OPTIONS linux-modules-extra-* linux-firmware
fi

if [ -f /bin/ping ]; then
    chmod +s /bin/ping
fi
