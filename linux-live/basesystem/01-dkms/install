#!/bin/bash

set -e          # exit on error
set -o pipefail # exit on pipeline error
set -u          # treat unset variable as error

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

if [ -f /usr/bin/dpkg-query ] 2>/dev/null; then
    KERNEL=$(dpkg-query -W -f='${binary:Package}\n' linux-image-* | head -n 1 | sed 's/linux-image-//')
else
    KERNEL=$(uname -r)
fi

if [ $DISTRIBUTION = "bullseye" ] || [ $DISTRIBUTION = "bookworm" ] || [ $DISTRIBUTION = "kali-rolling" ] || [ $DISTRIBUTION = "focal" ]; then
    exit 0
fi

$APT_CMD update >>$OUTPUT 2>&1
if [ $DISTRIBUTION_TYPE = "debian" ]; then
    $APT_CMD install $APT_OPTIONS linux-headers-$KERNEL_ARCH gcc make >>$OUTPUT 2>&1
elif [ $DISTRIBUTION_TYPE = "ubuntu" ]; then
    $APT_CMD install $APT_OPTIONS linux-headers-$KERNEL gcc make >>$OUTPUT 2>&1
fi

if [ $DISTRIBUTION = "stretch" ] || [ $DISTRIBUTION = "buster" ]; then
    $APT_CMD install $APT_OPTIONS aufs-dkms >>$OUTPUT 2>&1
fi

if [ $PACKAGE_VARIANT = "standard!" ]; then
    TARGET_VER=$KERNEL
    export TARGET_VER
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A2F683C52980AECF
    echo "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian $DISTRIBUTION contrib" >/etc/apt/sources.list.d/virtualbox.list
    if [ $PACKAGE_VARIANT = "standard" ]; then
        $APT_CMD update >>$OUTPUT 2>&1 &&
            $APT_CMD install $APT_OPTIONS virtualbox-guest-additions-iso >>$OUTPUT 2>&1
    fi
    cd /tmp
    isoinfo -f -R -i /usr/share/virtualbox/VBoxGuestAdditions.iso -x /VBoxLinuxAdditions.run >/tmp/VBoxLinuxAdditions.run
    chmod +x /tmp/VBoxLinuxAdditions.run
    set +e
    /tmp/VBoxLinuxAdditions.run
    set -e
fi

echo "KERNEL=$KERNEL" >/livekit.conf
