#!/bin/bash
#
# Ð¡ommand line parsing script.
# Author: crims0n. <http://minios.dev>
#

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

. /lib/minioslib

function set_trace_log() {
    if [ ! -d /var/log/minios ]; then
        mkdir -p /var/log/minios
    fi
    exec 19>/var/log/minios/"$1"
    BASH_XTRACEFD=19

    set -x
}

function set_variables() {
    CONFIG=/etc/minios/config
    BUILDCONFIG=/etc/minios/buildconfig
    if [ -f "$CONFIG" ]; then
        read_config "$CONFIG" LIVEKITNAME
    else
        LIVEKITNAME="minios"
    fi
    MINIOSCONFIG=/etc/minios/"$LIVEKITNAME".conf
}

function read_cmdline_values() {
    if [ -f /cmdline ]; then
        read -r CMDLINE </cmdline
        read_cmdline "$CMDLINE"
    fi
}

function set_cloud() {
    if [ -z "$CLOUD" ]; then
        if [ -f "$MINIOSCONFIG" ]; then
            read_config "$MINIOSCONFIG" CLOUD
            if [ -z "$CLOUD" ]; then
                CLOUD="false"
            fi
        else
            CLOUD="false"
        fi
    fi
    if [ "$CLOUD" = "true" ]; then
        user="root"
        DEFAULT_TARGET="multi-user"
        systemctl enable ssh
    fi
}

function set_default_target() {
    if [ -z "$DEFAULT_TARGET" ]; then
        if [ -f "$MINIOSCONFIG" ]; then
            read_config "$MINIOSCONFIG" DEFAULT_TARGET
            if [ -z "$DEFAULT_TARGET" ]; then
                DEFAULT_TARGET="graphical"
            fi
        else
            DEFAULT_TARGET="graphical"
        fi
    fi
    if [ -n "$DEFAULT_TARGET" ]; then
        systemctl set-default "$DEFAULT_TARGET"
    fi
}

function manage_services() {
    local ACTION="$1"
    local SERVICES_VAR
    if [ "$ACTION" == "enable" ]; then
        SERVICES_VAR="ENABLE_SERVICES"
    elif [ "$ACTION" == "disable" ]; then
        SERVICES_VAR="DISABLE_SERVICES"
    else
        echo "Invalid ACTION: $ACTION"
        return 1
    fi

    if [ -z "${!SERVICES_VAR}" ]; then
        if [ "$SCRIPT_DIR" != "/usr/bin" ]; then
            if [ -f "$MINIOSCONFIG" ]; then
                read_config "$MINIOSCONFIG" "$SERVICES_VAR"
            fi
        fi
    fi

    if [ -n "${!SERVICES_VAR}" ]; then
        IFS=',' read -ra SERVICES <<<"${!SERVICES_VAR}"
        for SERVICE in "${SERVICES[@]}"; do
            if [ "$SERVICE" = "cockpit" ]; then
                systemctl "$ACTION" cockpit.socket
            else
                systemctl "$ACTION" "$SERVICE"
            fi
        done
    fi
}

function set_autologin() {
    if [ -z "$AUTOLOGIN" ]; then
        if [ -f "$MINIOSCONFIG" ]; then
            read_config "$MINIOSCONFIG" AUTOLOGIN
            if [ -z "$AUTOLOGIN" ]; then
                AUTOLOGIN="true"
            fi
        else
            AUTOLOGIN="true"
        fi
    fi

    if [ -z "$USER_NAME" ]; then
        if [ "$SCRIPT_DIR" != "/usr/bin" ]; then
            if [ -f "$MINIOSCONFIG" ]; then
                read_config "$MINIOSCONFIG" USER_NAME
            fi
        fi
    fi

    if [ "$AUTOLOGIN" = "true" ]; then
        if [ -f /usr/lib/systemd/system/xorg.service ]; then
            cat <<EOF >/usr/lib/systemd/system/xorg.service
[Unit]
Description=X-Window
ConditionKernelCommandLine=!text
After=systemd-user-sessions.service

[Service]
ExecStart=/bin/su --login -c "/usr/bin/startx -- :0 vt7 -ac -nolisten tcp" "$USER_NAME"

EOF
        fi
    fi

    if [ -f /usr/bin/x11vnc ]; then
        sed -i "s,-auth guess,-auth /home/$USER_NAME/.Xauthority,g" /usr/lib/systemd/system/x11vnc.service
    fi
}

console_colors
allow_root_only
set_trace_log "boot.trace"
set_variables
read_cmdline_values
set_cloud
set_default_target
manage_services enable
manage_services disable
set_autologin

echo ""
echo "/etc/minios/$LIVEKITNAME.conf configuration file contents:"
cat /etc/minios/"$LIVEKITNAME".conf
echo ""
