#!/bin/bash
#
# System boot configuration script.
# Author: crims0n <https://minios.dev>
#

SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
CONFIG="/etc/live/config.conf"

CMDLINE="$(cat /cmdline)"

# ======= Functions =======

set_trace_log() {
    mkdir -p /var/log/minios
    exec 19>/var/log/minios/"$1"
    BASH_XTRACEFD=19
    PS4='${LINENO}: '
    set -x
}

read_config() {
    shopt -s extglob

    local CONFIG_FILE="$1"
    local KEYLIST="${@:2}"

    if [[ ! -f "$CONFIG_FILE" || ! -r "$CONFIG_FILE" ]]; then
        error "$CONFIG_FILE is either not a file or not readable!"
        exit 1
    fi

    KEYLIST="${KEYLIST// /|}"

    while IFS='= ' read -r LHS RHS; do
        if [[ "${LHS}" =~ ^(${KEYLIST})$ ]] && [[ -n ${RHS} ]]; then
            RHS="${RHS%\"*}"
            RHS="${RHS#\"*}"
            RHS="${RHS%\'*}"
            RHS="${RHS#\'*}"

            if [[ "${RHS}" =~ ^\((.*)\)$ ]]; then
                eval ${LHS}=\("${BASH_REMATCH[1]}"\)
            else
                eval ${LHS}=\"${RHS}\"
            fi
        fi
    done <<<"$(tr -d '\r' <$CONFIG_FILE)"

    shopt -u extglob
}

read_cmdline() {
    for i in "$@"; do
        case $i in
        live-config.username=* | username=*)
            LIVE_USERNAME="${i#*=}"
            ;;
        default_target=*)
            DEFAULT_TARGET="${i#*=}"
            ;;
        enable_services=*)
            ENABLE_SERVICES="${i#*=}"
            ;;
        disable_services=*)
            DISABLE_SERVICES="${i#*=}"
            ;;
        scripts=*)
            SCRIPTS="${i#*=}"
            ;;
        esac
    done
}

set_default_target() {
    [ -n "$DEFAULT_TARGET" ] && systemctl set-default "${TEXT_MODE:+multi-user}" || systemctl set-default "$DEFAULT_TARGET"
}

manage_services() {
    local SERVICES_VAR ACTION
    ACTION="$1"
    SERVICES_VAR=""

    if [ "$ACTION" == "enable" ]; then
        SERVICES_VAR="ENABLE_SERVICES"
    elif [ "$ACTION" == "disable" ]; then
        SERVICES_VAR="DISABLE_SERVICES"
    else
        echo "Invalid ACTION: $ACTION"
        return 1
    fi

    if [ -z "${!SERVICES_VAR}" ]; then
        if [ -f "$CONFIG" ]; then
            read_config "$CONFIG" "$SERVICES_VAR"
        fi
    fi

    if [ -n "${!SERVICES_VAR}" ]; then
        IFS=',' read -ra SERVICES <<<"${!SERVICES_VAR}"
        for SERVICE in "${SERVICES[@]}"; do
            systemctl "$ACTION" "$SERVICE"
        done
    fi
}

set_autologin() {
    [ -z "$LIVE_USERNAME" ] && [ -f "$CONFIG" ] && read_config "$CONFIG" LIVE_USERNAME

    if [ -f "/usr/lib/systemd/system/xorg.service" ]; then
        cat <<EOF >"/usr/lib/systemd/system/xorg.service"
[Unit]
Description=X-Window
ConditionKernelCommandLine=!text
ConditionKernelCommandLine=!live-config.nox11autologin
ConditionKernelCommandLine=!nox11autologin
ConditionKernelCommandLine=!live-config.noautologin
ConditionKernelCommandLine=!noautologin
After=systemd-user-sessions.service

[Service]
ExecStart=/bin/su --login -c "/usr/bin/startx -- :0 vt7 -ac -nolisten tcp" "$LIVE_USERNAME"

[Install]
WantedBy=graphical.target
EOF
    fi

    command -v x11vnc >/dev/null && [ -f "/usr/lib/systemd/system/x11vnc.service" ] &&
        sed -i "s,-auth guess,-auth /home/$LIVE_USERNAME/.Xauthority,g" "/usr/lib/systemd/system/x11vnc.service"
}

set_scripts() {
    [ -z "$SCRIPTS" ] && [ -f "$CONFIG" ] && read_config "$CONFIG" SCRIPTS
    [ "$SCRIPTS" = "true" ] && systemctl enable minios-script-launcher.service || systemctl disable minios-script-launcher.service
}

# Main script execution
set_trace_log "minios-boot.trace.log"
read_cmdline "$CMDLINE"

set_default_target
manage_services enable
manage_services disable
set_autologin
set_scripts
