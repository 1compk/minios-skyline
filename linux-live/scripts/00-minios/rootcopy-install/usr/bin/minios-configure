#!/bin/bash
#
# Ð¡ommand line parsing script.
# Author: crims0n. <http://minios.dev>
#

. /usr/lib/minioslib || exit 1

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

function help() {
    echo -e "Usage: ${MAGENTA}$0${ENDCOLOR} parameter=value"
    if [ -L /usr/bin/$LIVEKITNAME-configure ] && [ "$0" != "/usr/bin/$LIVEKITNAME-configure" ]; then
        echo -e "\t${CYAN}$LIVEKITNAME-configure${ENDCOLOR} parameter=value"
    fi
    # if $1 is set, use $1 as headline message in help()
    if [ -z ${1+x} ]; then
        echo -e "${LIGHTYELLOW}This script allows you to configure some parameters of $SYSTEMNAME.${ENDCOLOR}"
        echo -e
    else
        echo -e $1
        echo
    fi
    echo -e "
  root_password     root password.
  user_name         user name. If you specify the user name root, then the user
                    profile will not be used, the user_password parameter will
                    be ignored.
  user_password     user password.
  host_name         hostname of the system.
  default_target    target of systemd. For loading GUI - graphical, for loading
                    in command line mode - multi-user, for loading in emergency
                    mode - emergency.
  ssh               enable ssh.
  ssh_key           the name of the ssh public key file, which should be
                    located in the system folder on the media (along with the
                    main .sb modules). By default, the system looks for a file
                    named authorized_keys.
  cloud             special mode to run as a cloud-init host.
  hide_credentials  hide credentials displayed as a prompt in the console at
                    system startup.

Example: ${LIGHTYELLOW}$0${ENDCOLOR} root_password=toor user_name=user"
    exit 0
}

console_colors
allow_root_only

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
CONFIG=/etc/minios/config
BUILDCONFIG=/etc/minios/buildconfig
CURRENT_USER_NAME=$(id -nu 1000)
CURRENT_USER_GROUP=$(id -ng 1000)

read_cmdline $@
if [ -f $CONFIG ]; then
    read_config $CONFIG LIVEKITNAME
else
    LIVEKITNAME="minios"
fi
if [ -f $BUILDCONFIG ]; then
    read_config $BUILDCONFIG SYSTEMNAME
else
    SYSTEMNAME="MiniOS"
fi
if [[ $# == 0 ]] || [ "$UNKNOWN" = "true" ]; then help; fi

if [ -n "$ROOT_PASSWORD" ]; then
    echo root:$ROOT_PASSWORD | chpasswd
fi

if [ -z "$CLOUD" ]; then
    if [ -f /etc/$LIVEKITNAME/$LIVEKITNAME.conf ]; then
        read_config /etc/$LIVEKITNAME/$LIVEKITNAME.conf CLOUD
        if [ -z "$CLOUD" ]; then
            CLOUD="false"
        fi
    else
        CLOUD="false"
    fi
fi
sed -i -e "/CLOUD=/s/=.*/=$CLOUD/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
if [ "$CLOUD" != "true" ]; then
    if [ "$USER_NAME" != "root" ]; then
        # Set up user
        USER_NAME="live"
        USER_GROUP="live"
        if [ -z "$USER_PASSWORD" ]; then
            if [ "$SCRIPT_DIR" != "/usr/bin" ]; then
                if [ -f /etc/$LIVEKITNAME/$LIVEKITNAME.conf ]; then
                    read_config /etc/$LIVEKITNAME/$LIVEKITNAME.conf USER_PASSWORD
                fi
                if [ -z "$USER_PASSWORD" ]; then
                    USER_PASSWORD="evil"
                fi
            fi
        fi
        if [ -n "$USER_PASSWORD" ]; then
            # Set up password for user
            echo $USER_NAME:$USER_PASSWORD | chpasswd
        fi
    fi
else
    USER_NAME="root"
    SSH="true"
fi

if [ ! -f /var/.minios-setup-completed ]; then
    if [ "$USER_NAME" != "root" ]; then
        cp -rT /etc/skel /home/$USER_NAME
        # create user directories
        if [ -d /home/$USER_NAME ]; then
            for dir in Desktop Documents Downloads Music Pictures Public Templates Videos; do
                mkdir -p /home/$USER_NAME/$dir
            done
            if [ ! -d /home/$USER_NAME/.ssh ]; then
                mkdir /home/$USER_NAME/.ssh
                chmod 700 /home/$USER_NAME/.ssh
            fi
            if [ -f /root/.ssh/authorized_keys ]; then
                cp /root/.ssh/authorized_keys /home/$USER_NAME/.ssh/authorized_keys
            fi
            USER_ID=$(id -u $USER_NAME)
            GROUP_ID=$(id -g $USER_NAME)
            chown $USER_ID:$GROUP_ID /home/$USER_NAME
            chown -R $USER_ID:$GROUP_ID /home/$USER_NAME
        fi
    fi
fi

if [ "$USER_NAME" != "root" ]; then
    cat <<EOF >/etc/sudoers.d/90-minios
# live user is default user in minios.
# It needs passwordless sudo functionality.
$USER_NAME ALL=(ALL) NOPASSWD:ALL
EOF
fi

if [ "$CLOUD" != "true" ]; then
    if [ -n "$HOST_NAME" ]; then
        echo $HOST_NAME >/etc/hostname
        cat <<EOF >/etc/hosts
127.0.0.1       localhost $HOST_NAME
::1             localhost ip6-localhost ip6-loopback $HOST_NAME
ff02::1         ip6-allnodes
ff02::2         ip6-allrouters

EOF
    fi
fi

if [ -z "$SCRIPTS" ]; then
    SCRIPTS="false"
fi

if [ -z "$HIDE_CREDENTIALS" ]; then
    HIDE_CREDENTIALS="false"
fi

CONFIG_USER_NAME=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf USER_NAME)
if [ $USER_NAME != $CONFIG_USER_NAME ]; then
    if [ -n "$USER_NAME" ]; then
        sed -i -e "/USER_NAME=/s/=.*/=\"$USER_NAME\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_USER_PASSWORD=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf USER_PASSWORD)
if [ $USER_PASSWORD != $CONFIG_USER_PASSWORD ]; then
    if [ -n "$USER_PASSWORD" ]; then
        sed -i -e "/USER_PASSWORD=/s/=.*/=\"$USER_PASSWORD\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_ROOT_PASSWORD=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf ROOT_PASSWORD)
if [ $ROOT_PASSWORD != $CONFIG_ROOT_PASSWORD ]; then
    if [ -n "$ROOT_PASSWORD" ]; then
        sed -i -e "/ROOT_PASSWORD=/s/=.*/=\"$ROOT_PASSWORD\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_HOST_NAME=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf HOST_NAME)
if [ $HOST_NAME != $CONFIG_HOST_NAME ]; then
    if [ -n "$HOST_NAME" ]; then
        sed -i -e "/HOST_NAME=/s/=.*/=\"$HOST_NAME\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_DEFAULT_TARGET=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf DEFAULT_TARGET)
if [ $DEFAULT_TARGET != $CONFIG_DEFAULT_TARGET ]; then
    if [ -n "$DEFAULT_TARGET" ]; then
        sed -i -e "/DEFAULT_TARGET=/s/=.*/=\"$DEFAULT_TARGET\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_ENABLE_SERVICES=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf ENABLE_SERVICES)
if [ $ENABLE_SERVICES != $CONFIG_ENABLE_SERVICES ]; then
    if [ -n "$ENABLE_SERVICES" ]; then
        sed -i -e "/ENABLE_SERVICES=/s/=.*/=\"$ENABLE_SERVICES\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_DISABLE_SERVICES=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf DISABLE_SERVICES)
if [ $DISABLE_SERVICES != $CONFIG_DISABLE_SERVICES ]; then
    if [ -n "$DISABLE_SERVICES" ]; then
        sed -i -e "/DISABLE_SERVICES=/s/=.*/=\"$DISABLE_SERVICES\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf SSH)
if [ $SSH != $CONFIG_SSH ]; then
    if [ -n "$SSH" ]; then
        sed -i -e "/SSH=/s/=.*/=\"$SSH\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_SSH_KEY=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf SSH_KEY)
if [ $SSH_KEY != $CONFIG_SSH_KEY ]; then
    if [ -n "$SSH_KEY" ]; then
        sed -i -e "/SSH_KEY=/s/=.*/=\"$SSH_KEY\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_SCRIPTS=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf SCRIPTS)
if [ $SCRIPTS != $CONFIG_SCRIPTS ]; then
    if [ -n "$SCRIPTS" ]; then
        sed -i -e "/SCRIPTS=/s/=.*/=\"$SCRIPTS\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf USER_PASSWORD)
if [ $USER_PASSWORD != $CONFIG_ ]; then
    if [ -n "$CLOUD" ]; then
        sed -i -e "/CLOUD=/s/=.*/=\"$CLOUD\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_CLOUD=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf CLOUD)
if [ $CLOUD != $CONFIG_CLOUD ]; then
    if [ -n "$HIDE_CREDENTIALS" ]; then
        sed -i -e "/HIDE_CREDENTIALS=/s/=.*/=\"$HIDE_CREDENTIALS\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
    fi
fi
CONFIG_INITRD_TYPE=$(read_config_value /etc/$LIVEKITNAME/$LIVEKITNAME.conf INITRD_TYPE)
if [ $INITRD_TYPE != $CONFIG_INITRD_TYPE ]; then
    if [ -n "$INITRD_TYPE" ]; then
        sed -i -e "/INITRD_TYPE=/s/=.*/=\"$INITRD_TYPE\"/" /etc/$LIVEKITNAME/$LIVEKITNAME.conf
        sed -i -e "/INITRD_TYPE=/s/=.*/=\"$INITRD_TYPE\"/" /etc/$LIVEKITNAME/buildconfig
    fi
fi
