#!/bin/bash
# Author: sfs <https://puppyrus.org>
# Author: crims0n <https://minios.dev>

. /usr/lib/minioslib || exit 1

[ ! "$1" ] && echo "Builds a common dpkg database from all bundles
    Usage:   $0 [bundles mount points location] [optional: changes location]
    Example: $0 /run/initramfs/memory/bundles /run/initramfs/memory/changes" && exit 1

# Logs
if [ ! -d /var/log/minios ]; then
    mkdir -p /var/log/minios
fi
exec 19>/var/log/minios/minios-update-dpkg.trace
BASH_XTRACEFD=19
PS4='${LINENO}: '
set -x

# Variables
BUNDLES="$1"
CHANGES="$2"
read_config /etc/minios/config BEXT
BEXT=${BEXT:-"sb"}
DPKG_STATUS_FILE=/var/lib/dpkg/status

[ -d $(dirname $DPKG_STATUS_FILE) ] || exit

allow_root_only

APT_BINARY="$(command -v apt)"
APTGET_BINARY="$(command -v apt-get)"
DPKG_BINARY="$(command -v dpkg)"

for BINARY in "$APT_BINARY" "$APTGET_BINARY" "$DPKG_BINARY"; do
    if [ -f "$BINARY" ] && [ -f "$BINARY.bak" ]; then
        echo "DPKG database update is in progress, please wait. The update may take 1-2 minutes."
        exit 1
    fi
done

for BINARY in "$APT_BINARY" "$APTGET_BINARY" "$DPKG_BINARY"; do
    if [ -f "$BINARY" ] && [ ! -f "$BINARY.bak" ]; then
        mv "$BINARY" "$BINARY.bak"
        echo '#!/bin/bash
echo "DPKG database update is in progress, please wait. The update may take 1-2 minutes."
' >"$BINARY"
        chmod +x "$BINARY"
    fi
done

cat "$BUNDLES"/*."$BEXT"/var/lib/dpkg/statoverride | sort -u >/var/lib/dpkg/statoverride

TEMP_FILE=$(mktemp /run/dpkg_status_file.XXXXXX)
trap 'rm -f "$TEMP_FILE"*' EXIT

if [ -f "/var/log/minios/statusfile" ]; then
    rm "/var/log/minios/statusfile"
fi
if [ -f "$DPKG_STATUS_FILE" ]; then
    rm "$DPKG_STATUS_FILE"
fi
cat $(ls "$BUNDLES"/*/var/lib/dpkg/status "$CHANGES/var/lib/dpkg/status") >"$TEMP_FILE"
for PACKAGE in $(awk -F"Package: " '/^Package: / {print $2}' "$TEMP_FILE" | sort -u | sed 's/+/\\\+/g'); do
    awk '/^Package: '$PACKAGE'$/ {p=1} p==1 {print} /^$/ {if (p==1) exit}' "$TEMP_FILE" >>$DPKG_STATUS_FILE
done
cp $DPKG_STATUS_FILE /var/log/minios/statusfile

for BINARY in "$APT_BINARY" "$APTGET_BINARY" "$DPKG_BINARY"; do
    if [ -f "$BINARY" ] && [ -f "$BINARY.bak" ]; then
        rm "$BINARY"
        mv "$BINARY.bak" "$BINARY"
    fi
done
