#!/bin/bash
# Author: sfs <https://puppyrrus.org>
# Author: crims0n <https://minios.dev>

. /usr/lib/minioslib || exit 1

[ ! "$1" ] && echo "Updates caches for all bundles
    Usage:   $0 [bundles mount points location]
    Example: $0 /run/initramfs/memory/bundles" && exit 1

if [ ! -d /var/log/minios ]; then
    mkdir -p /var/log/minios
fi
exec 19>/var/log/minios/update-cache.log
BASH_XTRACEFD=19
set -x

function configure_kernel_modules() {
    for D in $(find $BUNDLES/*/lib/modules/*$(uname -r) -type f \( -name "*.ko" -o -name "*.ko.gz" -o -name "*.ko.xz" \) 2>/dev/null | egrep -v "$BUNDLES/(01-kernel|$CORE_BUNDLE_PREFIX)"); do
        d1="$(basename $D | sed 's/.[gx]z$//')"
        [ "$(cat /etc/modprobe.d/*.conf | awk '/^blacklist / && / '$D1'$/ {print $2}')" ] && continue
        [ "$(lsmod | egrep '^'$D1' ')" ] && continue # module already loaded -> next D
        if [ ! "$DM" ]; then                         # if DM is empty, i.e. depmod did not
            sudo insmod "$D" && continue
            sudo depmod && DM=true
        fi
        sudo modprobe "$D1"
    done
}

function update_caches() {
    if [ ! "$UPDATE_MIME" ]; then
        [ -d "$1/usr/share/mime/" ] && UPDATE_MIME=true && update-mime-database /usr/share/mime &
    fi
    if [ ! "$UPDATE_BUFFERS" ]; then
        [ -d "$1/usr/lib/gdk-pixbuf-2.0/" ] && UPDATE_BUFFERS=true && gdk-pixbuf-query-loaders --update-cache &
    fi
    if [ ! "$UPDATE_ICONS" ]; then
        [ -d "$1/usr/share/icons/hicolor/" ] && UPDATE_ICONS=true && gtk-update-icon-cache -f -i -q /usr/share/icons/hicolor &
    fi
    if [ ! "$UPDATE_SCHEMAS" ]; then
        [ -d "$1/usr/share/glib-2.0/schemas/" ] && UPDATE_SCHEMAS=true && glib-compile-schemas /usr/share/glib-2.0/schemas/ &
    fi
    if [ ! "$UPDATE_APPLICATIONS" ]; then
        if [ -d "$1/usr/share/applications/" -o -d "$1/usr/local/share/applications/" ]; then
            UPDATE_APPLICATIONS=true
            update-desktop-database -q &
            touch /usr/share/applications/screensavers &
        fi
    fi
    if [ ! "$FCNEED" ]; then
        for FONT_DIR in /usr/share/fonts{,/default}/TTF /usr/X11R6/lib/X11/fonts/TTF; do
            if [ -d "$1/${FONT_DIR}" ]; then
                FCNEED=true
                mkfontscale ${FONT_DIR} &
                mkfontdir ${FONT_DIR} &
            fi
        done
        [ $FCNEED ] && fc-cache -f -s &
    fi
}

BUNDLES=$1
read_config /etc/minios/minios.conf CORE_BUNDLE_PREFIX
if [ -z "$CORE_BUNDLE_PREFIX" ]; then
    CORE_BUNDLE_PREFIX="00-core"
fi
read_config /etc/minios/config BEXT
if [ -z "$BEXT" ]; then
    BEXT="sb"
fi

allow_root_only

ldconfig

for BUNDLE in $(ls -d $BUNDLES/*.$BEXT | egrep -v "^$BUNDLES/00"); do
    update_caches "$BUNDLE"
done

configure_kernel_modules

exit 0
