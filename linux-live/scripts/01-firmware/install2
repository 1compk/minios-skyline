#!/bin/bash

set -e          # exit on error
set -o pipefail # exit on pipeline error
#set -u          # treat unset variable as error

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

if [ -f /usr/bin/dpkg-query ] 2>/dev/null; then
    KERNEL=$(dpkg-query -W -f='${binary:Package}\n' linux-image-* | head -n 1 | sed 's/linux-image-//')
else
    KERNEL=$(uname -r)
fi

if [ $DISTRIBUTION_ARCH = "amd64" ] && [ $DISTRIBUTION = "orel" ]; then
    DISTRIBUTION_ARCH="x86_64"
fi

echo "KERNEL=$KERNEL" >/livekit.conf

if [ $PACKAGE_VARIANT = "maximum" ] || [ $PACKAGE_VARIANT = "ultra" ]; then
    if [ $DISTRIBUTION = "stretch" ] || [ $DISTRIBUTION = "buster" ] || [ $DISTRIBUTION = "bullseye" ] || [ $DISTRIBUTION = "bookworm" ] || [ $DISTRIBUTION = "sid" ]; then
        if [ $DISTRIBUTION = "bookworm" ]; then
            cat <<EOF >/etc/apt/sources.list.d/mx.list
# MX Community Main and Test Repos
deb http://mxrepo.com/mx/repo/ testing main non-free
#deb http://mxrepo.com/mx/testrepo/ testing test

#ahs hardware stack repo
deb http://mxrepo.com/mx/repo/ testing ahs
EOF
        else
            cat <<EOF >/etc/apt/sources.list.d/mx.list
# MX Community Main and Test Repos
deb http://mxrepo.com/mx/repo/ $DISTRIBUTION main non-free
#deb http://mxrepo.com/mx/testrepo/ $DISTRIBUTION test

#ahs hardware stack repo
deb http://mxrepo.com/mx/repo/ $DISTRIBUTION ahs
EOF
        fi
    fi
    apt-get update >>$OUTPUT 2>&1
    if [ $DISTRIBUTION_TYPE = "debian" ]; then
        if [ $DISTRIBUTION = "orel" ]; then
            apt-get install -y linux-headers-$KERNEL gcc make build-essential libelf-dev debhelper dpkg-dev dkms bc git >>$OUTPUT 2>&1
        else
            apt-get install -y linux-headers-$KERNEL_ARCH gcc make build-essential libelf-dev debhelper dpkg-dev dkms bc git >>$OUTPUT 2>&1
        fi
    elif [ $DISTRIBUTION_TYPE = "ubuntu" ]; then
        apt-get install -y linux-headers-$KERNEL gcc make build-essential libelf-dev debhelper dpkg-dev dkms bc git >>$OUTPUT 2>&1
    fi

    apt-get install -y broadcom-sta-dkms >>$OUTPUT 2>&1
    if [ $DISTRIBUTION = "kali-rolling" ]; then
        apt-get install -y realtek-rtl88xxau-dkms >>$OUTPUT 2>&1
    elif [ $DISTRIBUTION = "stretch" ] || [ $DISTRIBUTION = "buster" ] || [ $DISTRIBUTION = "bullseye" ]; then
        apt-get install -y \
            rtl8812au-dkms \
            rtl8821ce-dkms \
            rtl8821cu-dkms >>$OUTPUT 2>&1
    elif [ $DISTRIBUTION = "bookworm" ] || [ $DISTRIBUTION = "sid" ]; then
        apt-get install -y \
            rtl8821ce-dkms >>$OUTPUT 2>&1
        #apt-get install -y git build-essential libelf-dev debhelper dpkg-dev dkms bc >>$OUTPUT 2>&1
        git clone https://github.com/aircrack-ng/rtl8812au
        cd rtl8812au
        #sed -i "1140s/.*/KVER  := $KERNEL/g" ./Makefile
        sed -i "s/uname -r/echo $KERNEL/g" ./Makefile
        sed -i "s/uname -m/echo $DISTRIBUTION_ARCH/g" ./Makefile
        sed -i "s/-v \$(DRIVER_VERSION)/-v \$(DRIVER_VERSION) -k $KERNEL/g" ./Makefile
        sed -i "s/\${kernelver}/$KERNEL/g" ./dkms.conf
        make dkms_install
        cd -
    fi
    if [ $DISTRIBUTION = "kali-rolling" ] || [ $DISTRIBUTION = "bookworm" ] || [ $DISTRIBUTION = "sid" ]; then
        echo
    else
        echo "DISTRIBUTION=$DISTRIBUTION"
        git clone https://github.com/EntropicEffect/rtl8822bu
        cd rtl8822bu
        sed -i "s/uname -r/echo $KERNEL/g" ./Makefile
        sed -i "s/uname -m/echo $DISTRIBUTION_ARCH/g" ./Makefile
        sed -i "s/dkms add -m 8812au -v \$(DRIVER_VERSION)/dkms add -m 8812au -v \$(DRIVER_VERSION) -k $KERNEL/g" ./Makefile
        sed -i "s/\${kernelver}/$KERNEL/g" ./dkms.conf
        make
        make install
        cd -
    fi
    if [ $DISTRIBUTION = "stretch" ] || [ $DISTRIBUTION = "buster" ] || [ $DISTRIBUTION = "bullseye" ] || [ $DISTRIBUTION = "bookworm" ] || [ $DISTRIBUTION = "sid" ]; then
        apt-get install -y virtualbox-guest-dkms >>$OUTPUT 2>&1
    else
        TARGET_VER=$KERNEL
        export TARGET_VER
        VBOX_VER=$(curl https://download.virtualbox.org/virtualbox/LATEST-STABLE.TXT)
        cd /tmp
        wget https://download.virtualbox.org/virtualbox/$VBOX_VER/VBoxGuestAdditions_$VBOX_VER.iso
        cd /tmp
        isoinfo -f -R -i /tmp/VBoxGuestAdditions_$VBOX_VER.iso -x /VBoxLinuxAdditions.run >/tmp/VBoxLinuxAdditions.run
        chmod +x /tmp/VBoxLinuxAdditions.run
        set +e
        /tmp/VBoxLinuxAdditions.run
        set -e
    fi
fi

rm /etc/apt/sources.list.d/mx.list
