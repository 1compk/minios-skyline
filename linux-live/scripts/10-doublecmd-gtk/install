#!/bin/bash

set -e          # exit on error
set -o pipefail # exit on pipeline error
set -u          # treat unset variable as error

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

function language_to_array() {
    local IFS
    IFS="_"
    LANG=($LOCALE)
}
language_to_array

apt-get $INSTALL_OPTIONS update >>$OUTPUT 2>&1

# install packages
#!!!the name of the main application of the module must be specified in the first line of package.list!!!
if [ -f $SCRIPT_DIR/package.list ]; then
    if [ $DISTRIBUTION = "bullseye" ]; then
        DEBIAN_FRONTEND=noninteractive \
            apt-get $INSTALL_OPTIONS install -t $DISTRIBUTION-backports -y \
            $(grep -vE "^\s*#" $SCRIPT_DIR/package.list | tr "\n" " ") >>$OUTPUT 2>&1
    else
        DEBIAN_FRONTEND=noninteractive \
            apt-get $INSTALL_OPTIONS install \
            $(grep -vE "^\s*#" $SCRIPT_DIR/package.list | tr "\n" " ") >>$OUTPUT 2>&1
    fi
    PACKAGE=$(head -n 1 $SCRIPT_DIR/package.list)
    echo "PACKAGE=$PACKAGE" >/.package
    echo "VERSION=$(dpkg -s $PACKAGE | grep Version | sed 's/Version: //g' | sed 's/:/-/g')" >>/.package
fi

if [ $LOCALE != "en_US" ]; then
    sed -i "s/doublecmd.en.po/doublecmd.${LANG[0]}.po/g" /etc/skel/.config/doublecmd/doublecmd.xml
fi
