#!/bin/bash

set -e          # exit on error
set -o pipefail # exit on pipeline error
set -u          # treat unset variable as error

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

function language_to_array() {
    local IFS
    IFS="_"
    LANG=($LOCALE)
}
language_to_array

apt-get update >>$OUTPUT 2>&1

# install packages
if [ -f $SCRIPT_DIR/$PACKAGE_VARIANT.list ]; then
    DEBIAN_FRONTEND=noninteractive \
        apt-get install -y \
        $(grep -vE "^\s*#" $SCRIPT_DIR/$PACKAGE_VARIANT.list | tr "\n" " ") >>$OUTPUT 2>&1
fi
if [ $PACKAGE_VARIANT != "custom" ]; then
    if [ $DISTRIBUTION = "stretch" ]; then
        DEBIAN_FRONTEND=noninteractive \
            apt-get install -y \
            remmina/$DISTRIBUTION-backports remmina-plugin-rdp/$DISTRIBUTION-backports remmina-plugin-vnc/$DISTRIBUTION-backports libssh-4/$DISTRIBUTION-backports >>$OUTPUT 2>&1
    elif [ $DISTRIBUTION = "buster" ]; then
        DEBIAN_FRONTEND=noninteractive \
            apt-get install -y \
            remmina/$DISTRIBUTION-backports remmina-plugin-rdp/$DISTRIBUTION-backports remmina-plugin-vnc/$DISTRIBUTION-backports >>$OUTPUT 2>&1
    else
        DEBIAN_FRONTEND=noninteractive \
            apt-get install -y \
            remmina remmina-plugin-rdp remmina-plugin-vnc >>$OUTPUT 2>&1
    fi
fi

if [ $PACKAGE_VARIANT = "maximum" ] || [ $PACKAGE_VARIANT = "ultra" ]; then
    curl -s https://api.github.com/repos/minios-linux/rescuezilla/releases/latest | grep browser_download_url | grep '\.deb' | cut -d '"' -f 4 | wget -i - &&
        DEBIAN_FRONTEND=noninteractive \
            apt-get -y install ./rescuezilla*.deb >>$OUTPUT 2>&1 &&
        rm -f ./rescuezilla*.deb
    if [ -f /usr/share/applications/yad-icon-browser.desktop ]; then
        rm -f /usr/share/applications/yad-icon-browser.desktop
    fi
    #        wget $(curl -s https://api.github.com/repos/iongion/podman-desktop-companion/releases | grep browser_download_url | grep '\.deb' | head -n1 | cut -d '"' -f 4)
    #        apt-get install -y ./podman-desktop-companion-amd64-*.deb >>$OUTPUT 2>&1 &&
    #            rm -f ./podman-desktop-companion-amd64-*.deb
fi

if grep -q "gsmartcontrol" $SCRIPT_DIR/$PACKAGE_VARIANT.list >/dev/null 2>&1; then
    for FOLDER in $(ls /usr/share/icons/elementary-xfce/apps | grep -E "^[0-9]+$"); do
        cd /usr/share/icons/elementary-xfce/apps/$FOLDER
        ln -s ../../devices/$FOLDER/drive-harddisk.png gsmartcontrol.png
    done
fi
if grep -q "grsync" $SCRIPT_DIR/$PACKAGE_VARIANT.list >/dev/null 2>&1; then
    for FOLDER in $(ls /usr/share/icons/elementary-xfce/apps | grep -E "^[0-9]+$"); do
        cd /usr/share/icons/elementary-xfce/apps/$FOLDER
        ln -s ../../status/$FOLDER/sync-synchronizing.png grsync.png
    done
    sed -i "s/grsync.png/grsync/g" /usr/share/applications/grsync.desktop
fi
if grep -q "imagemagick" $SCRIPT_DIR/$PACKAGE_VARIANT.list >/dev/null 2>&1; then
    rm -f /usr/share/applications/display-im6.q16.desktop
fi
if grep -q "galculator" $SCRIPT_DIR/$PACKAGE_VARIANT.list >/dev/null 2>&1; then
    for FOLDER in $(ls /usr/share/icons/elementary-xfce/apps | grep -E "^[0-9]+$"); do
        cd /usr/share/icons/elementary-xfce/apps/$FOLDER
        ln -s accessories-calculator.png galculator.png
    done
fi
if grep -q "baobab" $SCRIPT_DIR/$PACKAGE_VARIANT.list >/dev/null 2>&1; then
    for FOLDER in $(ls /usr/share/icons/elementary-xfce/apps | grep -E "^[0-9]+$"); do
        cd /usr/share/icons/elementary-xfce/apps/$FOLDER
        ln -s baobab.png org.gnome.baobab.png
    done
fi
if grep -q "pdfarranger" $SCRIPT_DIR/$PACKAGE_VARIANT.list >/dev/null 2>&1; then
    for FOLDER in $(ls /usr/share/icons/elementary-xfce/apps | grep -E "^[0-9]+$"); do
        cd /usr/share/icons/elementary-xfce/apps/$FOLDER
        ln -s pdfshuffler.png com.github.jeromerobert.pdfarranger.png
        ln -s pdfshuffler.png pdfarranger.png
    done
fi
if grep -q "pdfmod" $SCRIPT_DIR/$PACKAGE_VARIANT.list >/dev/null 2>&1; then
    for FOLDER in $(ls /usr/share/icons/elementary-xfce/apps | grep -E "^[0-9]+$"); do
        cd /usr/share/icons/elementary-xfce/apps/$FOLDER
        ln -s pdfshuffler.png pdfmod.png
    done
fi
update-icon-caches /usr/share/icons/*

if grep -q "vlc" $SCRIPT_DIR/$PACKAGE_VARIANT.list >/dev/null 2>&1; then
    if [ $LOCALE != "en_US" ]; then
        DEBIAN_FRONTEND=noninteractive \
            apt-get install -y vlc-l10n >>$OUTPUT 2>&1
    fi
fi
if grep -q "xfce4-clipman" $SCRIPT_DIR/$PACKAGE_VARIANT.list >/dev/null 2>&1; then
    sed -i "15i Name[ru]=Настройки менеджера буфера обмена" //usr/share/applications/xfce4-clipman-settings.desktop &&
        sed -i "29i Comment[ru]=Настройте свой буфер обмена" //usr/share/applications/xfce4-clipman-settings.desktop
fi
if [ $LOCALE != "en_US" ]; then
    sed -i "s/doublecmd.en.po/doublecmd.${LANG[0]}.po/g" /etc/skel/.config/doublecmd/doublecmd.xml
fi

: 'if [ $PACKAGE_VARIANT = "minimum" ]; then
    cat <<EOF >/etc/skel/.config/xfce4/helpers.rc
TerminalEmulator=xterm
FileManager=Thunar
WebBrowser=

EOF
elif [ $PACKAGE_VARIANT = "standard" ] || [ $PACKAGE_VARIANT = "maximum" ] || [ $PACKAGE_VARIANT = "ultra" ]; then
    cat <<EOF >/etc/skel/.config/xfce4/helpers.rc
TerminalEmulator=xfce4-terminal
FileManager=Thunar
WebBrowser=

EOF'
sed -i 's,FontName=Monospace 10,FontName=JetBrains Mono Light 10,g' /etc/skel/.config/xfce4/terminal/terminalrc
if [ $DISTRIBUTION = "stretch" ]; then
    sed -i 's,FontUseSystem=TRUE,FontUseSystem=FALSE,g' /etc/skel/.config/xfce4/terminal/terminalrc
fi
#fi
