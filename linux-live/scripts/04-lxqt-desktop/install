#!/bin/bash

set -e          # exit on error
set -o pipefail # exit on pipeline error
set -u          # treat unset variable as error

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

function language_to_array() {
    local IFS
    IFS="_"
    LANG=($LOCALE)
}
language_to_array

apt-get $INSTALL_OPTIONS update >>$OUTPUT 2>&1

echo "nodm nodm/enabled boolean true" | debconf-set-selections
echo "samba-common samba-common/dhcp boolean false" | debconf-set-selections

# install packages
if [ -f $SCRIPT_DIR/$PACKAGE_VARIANT.list ]; then
    DEBIAN_FRONTEND=noninteractive \
        apt-get $INSTALL_OPTIONS install \
        $(grep -vE "^\s*#" $SCRIPT_DIR/$PACKAGE_VARIANT.list | tr "\n" " ") >>$OUTPUT 2>&1
fi

if [ $LOCALE != "en_US" ]; then
    DEBIAN_FRONTEND=noninteractive \
        apt-get $INSTALL_OPTIONS install \
        liblxqt-l10n lxqt-config-l10n lxqt-globalkeys-l10n lxqt-notificationd-l10n lxqt-openssh-askpass-l10n lxqt-panel-l10n
    lxqt-policykit-l10n lxqt-powermanagement-l10n lxqt-runner-l10n lxqt-session-l10n pcmanfm-qt-l10n qterminal-l10n  >>$OUTPUT 2>&1
fi

if grep -q slim $SCRIPT_DIR/$PACKAGE_VARIANT.list && ! grep -q "#slim" $SCRIPT_DIR/$PACKAGE_VARIANT.list; then
    sed -i 's,# hidecursor          false,hidecursor            false,g' /etc/slim.conf
    sed -i 's,screenshot_cmd      scrot /root/slim.png,# screenshot_cmd      scrot /root/slim.png,g' /etc/slim.conf
    sed -i 's,#auto_login          no,auto_login          yes,g' /etc/slim.conf
    sed -i 's,current_theme       debian-softwaves,current_theme       minios,g' /etc/slim.conf
    sed -i "s/#default_user        simone/default_user        $USER_NAME/g" /etc/slim.conf
fi

if ! grep -q pulseaudio $SCRIPT_DIR/$PACKAGE_VARIANT.list || grep -q "#slim" $SCRIPT_DIR/$PACKAGE_VARIANT.list; then
    cat <<EOF >/usr/bin/audio-allowuser.sh
#!/bin/bash
if ! grep audio /etc/group | grep \$(id -nu 1000) >/dev/null; then
    usermod -a -G audio \$(id -nu 1000)
fi
EOF
    chmod +x /usr/bin/audio-allowuser.sh
    cat <<EOF >/usr/lib/systemd/system/audio-allowuser.service
[Unit]
Description=Allow user to use ALSA
#After=network.target

[Service]
Type=oneshot
ExecStart=/usr/bin/audio-allowuser.sh
RemainAfterExit=true
ExecStop=
StandardOutput=journal

[Install]
WantedBy=multi-user.target
EOF
    systemctl enable audio-allowuser.service >>$OUTPUT 2>&1
fi
