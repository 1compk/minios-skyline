#!/bin/bash

set -e          # exit on error
set -o pipefail # exit on pipeline error
set -u          # treat unset variable as error

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
PARENT_DIR="$(dirname "$SCRIPT_DIR")"
ISO_DIR="$(dirname "$SCRIPT_DIR")"/iso

set +u
if [ -z $OUTPUT ]; then
    . $SCRIPT_DIR/linux-live/buildconfig || exit 1
fi
set -u
. $SCRIPT_DIR/linux-live/minioslib || exit 1
. $SCRIPT_DIR/linux-live/config || exit 1

# don't change! use ./install instead
UNATTENDED="1"

CMD=(setup_host build_bootstrap build_chroot build_live build_modules_chroot build_iso)

# =============   main  ================

BUILD_DIR=""

common_variables

if [ -f /.dockerenv ] || [ "$container" = "podman" ]; then
    new_run
fi

console_colours

allow_root_only

create_livekitname_install_symlink

create_completion

create_backup

# check number of args
if [[ $# == 0 || $# > 3 ]]; then help; fi

# loop through args
dash_flag=false
start_index=0
end_index=${#CMD[*]}
for ii in "$@"; do
    if [[ $ii == "-" ]]; then
        dash_flag=true
        continue
    fi
    find_index $ii
    if [[ $dash_flag == false ]]; then
        start_index=$index
    else
        end_index=$(($index + 1))
    fi
done
if [[ $dash_flag == false ]]; then
    end_index=$(($start_index + 1))
fi

#loop through the commands
for ((ii = $start_index; ii < $end_index; ii++)); do
    setup_build_dir
    ${CMD[ii]}
done

echo -e "${BOLD}${LIGHTYELLOW}$0${ENDCOLOUR} - ${LIGHTGREEN}Command completed successfully!${ENDCOLOUR}"
