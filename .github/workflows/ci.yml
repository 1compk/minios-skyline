name: CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y debootstrap xorriso genisoimage binutils squashfs-tools grub-pc-bin grub-efi-amd64-bin dosfstools mtools xz-utils zstd curl rsync dpkg-dev debhelper devscripts build-essential fakeroot lintian

    - name: Set date variable
      run: echo "DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: Run build - standard i386
      run: |
        echo "Starting build for standard i386..."
        sudo ./minios-cmd -d bookworm -a i386 -de xfce -pv standard -aufs -kl
        echo "Build completed for standard i386."

    - name: Archive build output - standard i386
      uses: actions/upload-artifact@v3
      with:
        name: minios-bookworm-xfce-standard-i386-${{ env.DATE }}
        path: build/iso/*.iso

    - name: Run build - standard amd64
      run: |
        echo "Starting build for standard amd64..."
        sudo ./minios-cmd -d bookworm -a amd64 -de xfce -pv standard -aufs -dkms -kl
        echo "Build completed for standard amd64."

    - name: Archive build output - standard amd64
      uses: actions/upload-artifact@v3
      with:
        name: minios-bookworm-xfce-standard-amd64-${{ env.DATE }}
        path: build/iso/*.iso

    - name: Run build - toolbox amd64
      run: |
        echo "Starting build for toolbox amd64..."
        sudo ./minios-cmd -d bookworm -a amd64 -de xfce -pv toolbox -aufs -dkms -kl
        echo "Build completed for toolbox amd64."

    - name: Archive build output - toolbox amd64
      uses: actions/upload-artifact@v3
      with:
        name: minios-bookworm-xfce-toolbox-amd64-${{ env.DATE }}
        path: build/iso/*.iso

    - name: Build deb package
      run: |
        echo "Building deb package..."
        chmod +x tools/build-package.sh
        ./tools/build-package.sh
        echo "deb package build completed."

    - name: Archive deb package
      uses: actions/upload-artifact@v3
      with:
        name: minios-live-${{ env.DATE }}
        path: ../*.deb

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: |
          minios-bookworm-xfce-standard-i386-${{ env.DATE }}
          minios-bookworm-xfce-standard-amd64-${{ env.DATE }}
          minios-bookworm-xfce-toolbox-amd64-${{ env.DATE }}
          minios-live-${{ env.DATE }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref == 'refs/heads/master' && github.sha || github.ref_name }}
        draft: false
        prerelease: true

    - name: Upload Release Assets
      run: |
        for artifact in minios-bookworm-xfce-standard-i386-${{ env.DATE }}/*.iso minios-bookworm-xfce-standard-amd64-${{ env.DATE }}/*.iso minios-bookworm-xfce-toolbox-amd64-${{ env.DATE }}/*.iso ../*.deb; do
          asset_name=$(basename $artifact)
          echo "Uploading $asset_name"
          curl \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: $(file -b --mime-type $artifact)" \
            --data-binary @"$artifact" \
            "${{ steps.create_release.outputs.upload_url }}?name=$asset_name"
        done
